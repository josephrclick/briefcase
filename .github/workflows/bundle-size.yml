name: Bundle Size Tracking

on:
  pull_request:
    paths:
      - "apps/extension/**"
      - "package*.json"
      - ".github/workflows/bundle-size.yml"
  push:
    branches:
      - main
      - performance-optimization

jobs:
  bundle-analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for comparisons

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: apps/extension/package-lock.json

      - name: Install dependencies
        run: |
          cd apps/extension
          npm ci

      - name: Build extension
        run: |
          cd apps/extension
          npm run build

      - name: Analyze bundle size
        id: bundle-size
        run: |
          cd apps/extension
          npm run analyze:bundle > bundle-report.txt

          # Extract key metrics
          TOTAL_SIZE=$(grep "Total Bundle Size:" bundle-report.txt | awk '{print $4}')
          TARGET_SIZE=$(grep "Target Size:" bundle-report.txt | awk '{print $3}')
          PERCENTAGE=$(grep "Percentage of Target:" bundle-report.txt | awk '{print $4}')

          echo "total_size=$TOTAL_SIZE" >> $GITHUB_OUTPUT
          echo "target_size=$TARGET_SIZE" >> $GITHUB_OUTPUT
          echo "percentage=$PERCENTAGE" >> $GITHUB_OUTPUT

          # Check if under target
          if grep -q "✓ Under target" bundle-report.txt; then
            echo "status=success" >> $GITHUB_OUTPUT
            echo "✅ Bundle size is under target!" >> $GITHUB_STEP_SUMMARY
          else
            echo "status=warning" >> $GITHUB_OUTPUT
            echo "⚠️ Bundle size exceeds target!" >> $GITHUB_STEP_SUMMARY
          fi

          # Add summary
          echo "## Bundle Size Report" >> $GITHUB_STEP_SUMMARY
          echo "- **Total Size**: $TOTAL_SIZE" >> $GITHUB_STEP_SUMMARY
          echo "- **Target**: $TARGET_SIZE" >> $GITHUB_STEP_SUMMARY
          echo "- **Usage**: $PERCENTAGE" >> $GITHUB_STEP_SUMMARY

      - name: Upload bundle stats
        uses: actions/upload-artifact@v4
        with:
          name: bundle-stats
          path: |
            apps/extension/dist/bundle-stats.html
            apps/extension/bundle-report.json
            apps/extension/bundle-report.txt

      - name: Comment PR with bundle size
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('apps/extension/bundle-report.txt', 'utf8');

            // Extract metrics
            const totalSize = report.match(/Total Bundle Size:\s+(\S+)/)?.[1] || 'Unknown';
            const percentage = report.match(/Percentage of Target:\s+(\S+)/)?.[1] || 'Unknown';
            const isUnderTarget = report.includes('✓ Under target');

            const status = isUnderTarget ? '✅' : '⚠️';
            const comment = `## ${status} Bundle Size Report

            **Total Bundle Size**: ${totalSize}
            **Target Usage**: ${percentage}

            <details>
            <summary>Full Report</summary>

            \`\`\`
            ${report}
            \`\`\`
            </details>

            [View detailed visualization](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;

            // Find and update or create comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Bundle Size Report')
            );

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }

      - name: Store bundle metrics
        if: github.ref == 'refs/heads/main'
        run: |
          # Store metrics for historical tracking
          cd apps/extension
          mkdir -p .metrics
          echo "$(date -Iseconds),${GITHUB_SHA:0:7},${{ steps.bundle-size.outputs.total_size }},${{ steps.bundle-size.outputs.percentage }}" >> .metrics/bundle-history.csv

          # Only keep last 100 entries
          tail -n 100 .metrics/bundle-history.csv > .metrics/bundle-history.tmp
          mv .metrics/bundle-history.tmp .metrics/bundle-history.csv
